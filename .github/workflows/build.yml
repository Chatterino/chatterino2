---
name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build-windows:
    uses: ./.github/workflows/build-steps-windows.yml

  build-macos:
    uses: ./.github/workflows/build-steps-macos.yml

  build-linux:
    uses: ./.github/workflows/build-steps-linux.yml

  create-release:
    runs-on: ubuntu-latest
    if: (github.event_name == 'push' && github.ref == 'refs/heads/master')
    needs:
      - build-windows
      - build-macos
      - build-linux

    steps:
      - name: Create release
        id: create_release
        uses: pajlada/create-release@v2.0.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: nightly-build
          backup_tag_name: backup-nightly-build
          release_name: Nightly Release
          body: |
            Nightly Build
          prerelease: true

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-windows-x86-64-5.15.2-qmake.zip
          path: windows/

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-windows-x86-64-5.15.2-cmake.zip
          path: windows-cmake/

      - uses: actions/download-artifact@v3
        with:
          name: Chatterino-x86_64-5.15.2-qmake.AppImage
          path: linux/

      - uses: actions/download-artifact@v3
        with:
          name: Chatterino-x86_64-5.15.2-cmake.AppImage
          path: linux-cmake/

      - uses: actions/download-artifact@v3
        with:
          name: Chatterino-5.15.2-qmake.deb
          path: ubuntu/

      - uses: actions/download-artifact@v3
        with:
          name: Chatterino-5.15.2-cmake.deb
          path: ubuntu-cmake/

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-osx-5.15.2-qmake.dmg
          path: macos/

      - uses: actions/download-artifact@v3
        with:
          name: chatterino-osx-5.15.2-cmake.dmg
          path: macos-cmake/

      # TODO: Extract dmg and appimage

      # - name: Read upload URL into output
      #   id: upload_url
      #   run: |
      #     echo "::set-output name=upload_url::$(cat release-upload-url.txt/release-upload-url.txt)"

      - name: Upload release asset (Windows)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows/chatterino-windows-x86-64.zip
          asset_name: chatterino-windows-x86-64.zip
          asset_content_type: application/zip

      - name: Upload release asset (Windows) CMake
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./windows-cmake/chatterino-windows-x86-64.zip
          asset_name: test-cmake-chatterino-windows-x86-64.zip
          asset_content_type: application/zip

      - name: Upload release asset (Ubuntu)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux/Chatterino-x86_64.AppImage
          asset_name: Chatterino-x86_64.AppImage
          asset_content_type: application/x-executable

      - name: Upload release asset (Ubuntu) CMake
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./linux-cmake/Chatterino-x86_64.AppImage
          asset_name: test-cmake-Chatterino-x86_64.AppImage
          asset_content_type: application/x-executable

      - name: Upload release asset (Ubuntu .deb)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu/Chatterino.deb
          asset_name: Chatterino-x86_64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload release asset (Ubuntu .deb) CMake
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./ubuntu-cmake/Chatterino.deb
          asset_name: test-cmake-Chatterino-x86_64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload release asset (MacOS)
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos/chatterino-osx.dmg
          asset_name: chatterino-osx.dmg
          asset_content_type: application/x-bzip2

      - name: Upload release asset (MacOS) CMake
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./macos-cmake/chatterino-osx.dmg
          asset_name: test-cmake-chatterino-osx.dmg
          asset_content_type: application/x-bzip2