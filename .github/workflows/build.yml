---
name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
      fail-fast: false

    steps:
      - uses: actions/checkout@v1
        with:
          submodules: true

      # INSTALL DEPENDENCIES

      - name: Install dependencies (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
            # We use this source (temporarily?) until choco has updated their version of conan
            choco source add -n=AFG -s="https://api.bintray.com/nuget/anotherfoxguy/choco-pkg"
            choco install conan -y

            refreshenv
        shell: cmd

      - name: Install dependencies (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: sudo apt-get update && sudo apt-get -y install libssl-dev libboost-dev libboost-system-dev libboost-filesystem-dev libpulse-dev

      - name: Install dependencies (MacOS)
        if: startsWith(matrix.os, 'macos')
        run: |
            brew install boost openssl rapidjson qt p7zip create-dmg
        shell: bash

      - name: Install Qt (All platforms)
        uses: jurplel/install-qt-action@v2
        with:
          modules: qtwebengine

      # BUILD

      - name: Build (Windows)
        if: startsWith(matrix.os, 'windows')
        run: |
            call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
            mkdir build
            cd build
            "C:\Program Files\Conan\conan\conan.exe" install ..
            qmake ..
            set cl=/MP
            nmake /S /NOLOGO
            windeployqt release/chatterino.exe --release --no-compiler-runtime --no-translations --no-opengl-sw --dir Chatterino2/
            cp release/chatterino.exe Chatterino2/
            echo nightly > Chatterino2/modes
            7z a chatterino-windows-x86-64.zip Chatterino2/
        shell: cmd

      - name: Build (MacOS)
        if: startsWith(matrix.os, 'macos')
        run: |
            mkdir build
            cd build
            /usr/local/opt/qt/bin/qmake .. DEFINES+=$dateOfBuild
            sed -ie 's/-framework\\\ /-framework /g' Makefile
            make -j8
            /usr/local/opt/qt/bin/macdeployqt chatterino.app -dmg
            echo a
            mkdir app
            echo b
            hdiutil attach chatterino.dmg
            echo c
            cp -r /Volumes/chatterino/chatterino.app app/
            create-dmg --volname Chatterino2 --volicon ../resources/chatterino.icns --icon-size 50 --app-drop-link 0 0 --format UDBZ chatterino-osx.dmg app/
        shell: bash

      - name: Build (Ubuntu)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
            mkdir build
            cd build
            qmake ..
            make -j8
            sh ./../.CI/CreateAppImage.sh
        shell: bash

      # CREATE RELEASE

      - name: Create release (All platforms)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: TEST Release ${{ github.ref }}
          body: |
              looool
          draft: true
          prerelease: true

      # UPLOAD RELEASE ASSET

      - name: Upload release asset (MacOS)
        if: startsWith(matrix.os, 'macos')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./chatterino-osx.dmg
          asset_name: chatterino-osx.dmg
          asset_content_type: application/x-bzip2


      - name: Upload release asset (Windows)
        if: startsWith(matrix.os, 'windows')
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./chatterino-windows-x86-64.zip
          asset_name: chatterino-windows-x86-64.zip
          asset_content_type: application/zip
